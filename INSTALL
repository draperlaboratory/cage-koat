Requirements:
-------------
  OCaml (we use version 4.05.0)
  Opam  (we use version 1.2.2)
  OCamlgraph (we use version 1.8.6)
  One or more of the following SMT-solvers:

    yices, yices2, z3, cvc4, mathsat5
    
  The default for now is Z3.
    
  Optionally:
   * APRON
   * z3 ML bindings:
      To get z3 to work with kittel/koat directly, install the new ML
      bindings. At this time (z3 stable version 4.3), they are only
      available from the z3 source code repository on codeplex, in the
      "ml-ng" branch.
      To install them, check out this branch, configure z3 with
      --ml (you will need ocamlfind, ocamlidl and some other libraries
      as well, refer to the z3 documentation) and build as usual.
      "make install" should then install the files into
      /usr(/local)/lib/ocaml/$VERSION/, where VERSION corresponds to
      your OCaml version.
      You may need to add this path to the include path of your compiler,
      cf. Makefile.

  Use of APRON and the z3 ML bindings can be disabled by creating a
  file "user.cfg".  To disable use of APRON, add a line
  "HAVE_APRON=false" to that file.  To disable use of the z3 ML
  bindings, add a line "HAVE_Z3=false" to that file.

Build instructions:
-------------------
  "make kittel" builds the termination analysis backend "kittel.native"
  "make koat" builds the complexity analysis backend "koat.native"
  "make convert" builds "convert.native" which converts Simple programs to C
  "make detectLeak" builds "detectLeak.native" which tries to run
    information flow analysis to detect timing-sensitive information leak, using
    a JSON annotation file to mark the secret input.

  You might need to modify the KITTEL_LIBPATH and KOAT_LIBPATH lines in the
  Makefile to ensure that OCamlgraph and/or APRON is found (the
  "-I,+ocamlgraph" resp. "-I,+apron" parts).

Alternative Build Instructions for Linux using Opam (September 2016):
---------------------------------------------------------------------
  Build KoAT with Apron and z3 support using Opam.

  1. use `opam init` and follow the instructions to set up Opam and install OCaml if necessary
  2. `opam install ocamlfind camlp4 ocamlgraph yojson apron`
      * requires the _gmp_ and _mpfr_ libraries
  3. `opam remote add termite https://github.com/termite-analyser/opam-termite.git`
  4. `opam install Z3`
      * this builds the OCaml bindings and the _libz3.so_ library (in `~/.opam/system/lib/Z3` if the Opam configuration files were installed in the default location)
  5. update the `LD_LIBRARY_PATH` such that _libz3.so_ can be found _eg_ `export LD_LIBRARY_PATH=~/.opam/system/lib/Z3:$LD_LIBRARY_PATH`
  6. `make koat`

Building KoAT on Windows (September 2017):
---------------------------------------------------------------------
On Windows, KoAT can currently only be compiled without apron and without the z3-ocaml bindings. Hence, the Windows version will be significantly weaker and slower than the Linux version.

* install cygwin with the following additional packages
  * curl
  * gcc-core
  * gcc-g++
  * git
  * libgmp-devel
  * libmpfr-devel
  * m4
  * make
  * mingw64-i686-gcc-core
  * mingw64-x86_64-gcc-core
  * patchutils
  * python2-devel
  * unzip
* follow the instructions from https://github.com/fdopen/opam-repository-mingw to install opam
* opam install ocamlfind camlp4 ocamlgraph yojson
* set HAVE_APRON? and HAVE_Z3? to false in KoAT's Makefile
* make
